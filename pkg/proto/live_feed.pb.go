// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.3
// source: pkg/proto/_live_feed.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AirportFilterType int32

const (
	AirportFilterType_BOTH     AirportFilterType = 0
	AirportFilterType_INBOUND  AirportFilterType = 1
	AirportFilterType_OUTBOUND AirportFilterType = 2
)

// Enum value maps for AirportFilterType.
var (
	AirportFilterType_name = map[int32]string{
		0: "BOTH",
		1: "INBOUND",
		2: "OUTBOUND",
	}
	AirportFilterType_value = map[string]int32{
		"BOTH":     0,
		"INBOUND":  1,
		"OUTBOUND": 2,
	}
)

func (x AirportFilterType) Enum() *AirportFilterType {
	p := new(AirportFilterType)
	*p = x
	return p
}

func (x AirportFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AirportFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_fr24_proto__live_feed_proto_enumTypes[0].Descriptor()
}

func (AirportFilterType) Type() protoreflect.EnumType {
	return &file_fr24_proto__live_feed_proto_enumTypes[0]
}

func (x AirportFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AirportFilterType.Descriptor instead.
func (AirportFilterType) EnumDescriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{0}
}

type AirlineFilterType int32

const (
	AirlineFilterType_PAINTED_AS  AirlineFilterType = 0
	AirlineFilterType_OPERATED_BY AirlineFilterType = 1
)

// Enum value maps for AirlineFilterType.
var (
	AirlineFilterType_name = map[int32]string{
		0: "PAINTED_AS",
		1: "OPERATED_BY",
	}
	AirlineFilterType_value = map[string]int32{
		"PAINTED_AS":  0,
		"OPERATED_BY": 1,
	}
)

func (x AirlineFilterType) Enum() *AirlineFilterType {
	p := new(AirlineFilterType)
	*p = x
	return p
}

func (x AirlineFilterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AirlineFilterType) Descriptor() protoreflect.EnumDescriptor {
	return file_fr24_proto__live_feed_proto_enumTypes[1].Descriptor()
}

func (AirlineFilterType) Type() protoreflect.EnumType {
	return &file_fr24_proto__live_feed_proto_enumTypes[1]
}

func (x AirlineFilterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AirlineFilterType.Descriptor instead.
func (AirlineFilterType) EnumDescriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{1}
}

type LocationBoundaries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	North         float32                `protobuf:"fixed32,1,opt,name=north,proto3" json:"north,omitempty"` // Maximum Latitude, degrees, -90 to 90
	South         float32                `protobuf:"fixed32,2,opt,name=south,proto3" json:"south,omitempty"` // Minimum Latitude, degrees, -90 to 90
	West          float32                `protobuf:"fixed32,3,opt,name=west,proto3" json:"west,omitempty"`   // Minimum Longitude, degrees, -180 to 180
	East          float32                `protobuf:"fixed32,4,opt,name=east,proto3" json:"east,omitempty"`   // Maximum Longitude, degrees, -180 to 180
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationBoundaries) Reset() {
	*x = LocationBoundaries{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationBoundaries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationBoundaries) ProtoMessage() {}

func (x *LocationBoundaries) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationBoundaries.ProtoReflect.Descriptor instead.
func (*LocationBoundaries) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{0}
}

func (x *LocationBoundaries) GetNorth() float32 {
	if x != nil {
		return x.North
	}
	return 0
}

func (x *LocationBoundaries) GetSouth() float32 {
	if x != nil {
		return x.South
	}
	return 0
}

func (x *LocationBoundaries) GetWest() float32 {
	if x != nil {
		return x.West
	}
	return 0
}

func (x *LocationBoundaries) GetEast() float32 {
	if x != nil {
		return x.East
	}
	return 0
}

type VisibilitySettings struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SourcesList    []DataSource           `protobuf:"varint,1,rep,packed,name=sources_list,json=sourcesList,proto3,enum=_common.DataSource" json:"sources_list,omitempty"`
	ServicesList   []Service              `protobuf:"varint,2,rep,packed,name=services_list,json=servicesList,proto3,enum=_common.Service" json:"services_list,omitempty"`
	TrafficType    TrafficType            `protobuf:"varint,3,opt,name=traffic_type,json=trafficType,proto3,enum=_common.TrafficType" json:"traffic_type,omitempty"`
	OnlyRestricted *bool                  `protobuf:"varint,4,opt,name=only_restricted,json=onlyRestricted,proto3,oneof" json:"only_restricted,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VisibilitySettings) Reset() {
	*x = VisibilitySettings{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VisibilitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisibilitySettings) ProtoMessage() {}

func (x *VisibilitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisibilitySettings.ProtoReflect.Descriptor instead.
func (*VisibilitySettings) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{1}
}

func (x *VisibilitySettings) GetSourcesList() []DataSource {
	if x != nil {
		return x.SourcesList
	}
	return nil
}

func (x *VisibilitySettings) GetServicesList() []Service {
	if x != nil {
		return x.ServicesList
	}
	return nil
}

func (x *VisibilitySettings) GetTrafficType() TrafficType {
	if x != nil {
		return x.TrafficType
	}
	return TrafficType_NONE
}

func (x *VisibilitySettings) GetOnlyRestricted() bool {
	if x != nil && x.OnlyRestricted != nil {
		return *x.OnlyRestricted
	}
	return false
}

type AirportFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iata          string                 `protobuf:"bytes,1,opt,name=iata,proto3" json:"iata,omitempty"`
	CountryId     int32                  `protobuf:"varint,2,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
	Type          AirportFilterType      `protobuf:"varint,3,opt,name=type,proto3,enum=fr24.feed.api.v1.AirportFilterType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AirportFilter) Reset() {
	*x = AirportFilter{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AirportFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirportFilter) ProtoMessage() {}

func (x *AirportFilter) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirportFilter.ProtoReflect.Descriptor instead.
func (*AirportFilter) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{2}
}

func (x *AirportFilter) GetIata() string {
	if x != nil {
		return x.Iata
	}
	return ""
}

func (x *AirportFilter) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

func (x *AirportFilter) GetType() AirportFilterType {
	if x != nil {
		return x.Type
	}
	return AirportFilterType_BOTH
}

type Interval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           int32                  `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           int32                  `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interval) Reset() {
	*x = Interval{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{3}
}

func (x *Interval) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Interval) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type AirlineFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Icao          string                 `protobuf:"bytes,1,opt,name=icao,proto3" json:"icao,omitempty"` // ICAO airline designator, e.g. `CPA`
	Type          AirlineFilterType      `protobuf:"varint,2,opt,name=type,proto3,enum=fr24.feed.api.v1.AirlineFilterType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AirlineFilter) Reset() {
	*x = AirlineFilter{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AirlineFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirlineFilter) ProtoMessage() {}

func (x *AirlineFilter) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirlineFilter.ProtoReflect.Descriptor instead.
func (*AirlineFilter) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{4}
}

func (x *AirlineFilter) GetIcao() string {
	if x != nil {
		return x.Icao
	}
	return ""
}

func (x *AirlineFilter) GetType() AirlineFilterType {
	if x != nil {
		return x.Type
	}
	return AirlineFilterType_PAINTED_AS
}

type Filter struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AltitudeRangesList  []*Interval            `protobuf:"bytes,1,rep,name=altitude_ranges_list,json=altitudeRangesList,proto3" json:"altitude_ranges_list,omitempty"`
	SpeedRangesList     []*Interval            `protobuf:"bytes,2,rep,name=speed_ranges_list,json=speedRangesList,proto3" json:"speed_ranges_list,omitempty"` // Minimum and maximum ground speed, knots
	AirlinesList        []*AirlineFilter       `protobuf:"bytes,3,rep,name=airlines_list,json=airlinesList,proto3" json:"airlines_list,omitempty"`
	CallsignsList       []string               `protobuf:"bytes,4,rep,name=callsigns_list,json=callsignsList,proto3" json:"callsigns_list,omitempty"`
	RadarsList          []string               `protobuf:"bytes,5,rep,name=radars_list,json=radarsList,proto3" json:"radars_list,omitempty"` // List of receiver IDs, e.g. `["T-VHST000"]`
	RegsList            []string               `protobuf:"bytes,6,rep,name=regs_list,json=regsList,proto3" json:"regs_list,omitempty"`
	AirportsList        []*AirportFilter       `protobuf:"bytes,7,rep,name=airports_list,json=airportsList,proto3" json:"airports_list,omitempty"`
	FlightsList         []string               `protobuf:"bytes,8,rep,name=flights_list,json=flightsList,proto3" json:"flights_list,omitempty"`
	TypesList           []string               `protobuf:"bytes,9,rep,name=types_list,json=typesList,proto3" json:"types_list,omitempty"` // List of aircraft types, e.g. `["B74*"]`
	BirthYearRangesList []*Interval            `protobuf:"bytes,10,rep,name=birth_year_ranges_list,json=birthYearRangesList,proto3" json:"birth_year_ranges_list,omitempty"`
	SquawksList         []uint32               `protobuf:"varint,11,rep,packed,name=squawks_list,json=squawksList,proto3" json:"squawks_list,omitempty"`
	OriginsList         []*AirportFilter       `protobuf:"bytes,12,rep,name=origins_list,json=originsList,proto3" json:"origins_list,omitempty"`
	DestinationsList    []*AirportFilter       `protobuf:"bytes,13,rep,name=destinations_list,json=destinationsList,proto3" json:"destinations_list,omitempty"`
	CategoriesList      []Service              `protobuf:"varint,14,rep,packed,name=categories_list,json=categoriesList,proto3,enum=_common.Service" json:"categories_list,omitempty"`
	AirspacesList       []string               `protobuf:"bytes,15,rep,name=airspaces_list,json=airspacesList,proto3" json:"airspaces_list,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{5}
}

func (x *Filter) GetAltitudeRangesList() []*Interval {
	if x != nil {
		return x.AltitudeRangesList
	}
	return nil
}

func (x *Filter) GetSpeedRangesList() []*Interval {
	if x != nil {
		return x.SpeedRangesList
	}
	return nil
}

func (x *Filter) GetAirlinesList() []*AirlineFilter {
	if x != nil {
		return x.AirlinesList
	}
	return nil
}

func (x *Filter) GetCallsignsList() []string {
	if x != nil {
		return x.CallsignsList
	}
	return nil
}

func (x *Filter) GetRadarsList() []string {
	if x != nil {
		return x.RadarsList
	}
	return nil
}

func (x *Filter) GetRegsList() []string {
	if x != nil {
		return x.RegsList
	}
	return nil
}

func (x *Filter) GetAirportsList() []*AirportFilter {
	if x != nil {
		return x.AirportsList
	}
	return nil
}

func (x *Filter) GetFlightsList() []string {
	if x != nil {
		return x.FlightsList
	}
	return nil
}

func (x *Filter) GetTypesList() []string {
	if x != nil {
		return x.TypesList
	}
	return nil
}

func (x *Filter) GetBirthYearRangesList() []*Interval {
	if x != nil {
		return x.BirthYearRangesList
	}
	return nil
}

func (x *Filter) GetSquawksList() []uint32 {
	if x != nil {
		return x.SquawksList
	}
	return nil
}

func (x *Filter) GetOriginsList() []*AirportFilter {
	if x != nil {
		return x.OriginsList
	}
	return nil
}

func (x *Filter) GetDestinationsList() []*AirportFilter {
	if x != nil {
		return x.DestinationsList
	}
	return nil
}

func (x *Filter) GetCategoriesList() []Service {
	if x != nil {
		return x.CategoriesList
	}
	return nil
}

func (x *Filter) GetAirspacesList() []string {
	if x != nil {
		return x.AirspacesList
	}
	return nil
}

type LiveFeedRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Bounds                *LocationBoundaries    `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Settings              *VisibilitySettings    `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	FiltersList           *Filter                `protobuf:"bytes,3,opt,name=filters_list,json=filtersList,proto3" json:"filters_list,omitempty"`
	FleetsList            string                 `protobuf:"bytes,4,opt,name=fleets_list,json=fleetsList,proto3" json:"fleets_list,omitempty"` // requires authentication
	HighlightMode         bool                   `protobuf:"varint,5,opt,name=highlight_mode,json=highlightMode,proto3" json:"highlight_mode,omitempty"`
	Stats                 *bool                  `protobuf:"varint,6,opt,name=stats,proto3,oneof" json:"stats,omitempty"`   // Include statistics for the given area
	Limit                 *int32                 `protobuf:"varint,7,opt,name=limit,proto3,oneof" json:"limit,omitempty"`   // Maximum number of flights (default 1500 for unauthenticated users, 2000 for authenticated users)
	Maxage                *int32                 `protobuf:"varint,8,opt,name=maxage,proto3,oneof" json:"maxage,omitempty"` // Maximum age since last update, seconds (default 14400)
	RestrictionMode       *RestrictionVisibility `protobuf:"varint,9,opt,name=restriction_mode,json=restrictionMode,proto3,enum=_common.RestrictionVisibility,oneof" json:"restriction_mode,omitempty"`
	FieldMask             *fieldmaskpb.FieldMask `protobuf:"bytes,10,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	SelectedFlightIdsList []uint32               `protobuf:"fixed32,11,rep,packed,name=selected_flight_ids_list,json=selectedFlightIdsList,proto3" json:"selected_flight_ids_list,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LiveFeedRequest) Reset() {
	*x = LiveFeedRequest{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveFeedRequest) ProtoMessage() {}

func (x *LiveFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveFeedRequest.ProtoReflect.Descriptor instead.
func (*LiveFeedRequest) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{6}
}

func (x *LiveFeedRequest) GetBounds() *LocationBoundaries {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *LiveFeedRequest) GetSettings() *VisibilitySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *LiveFeedRequest) GetFiltersList() *Filter {
	if x != nil {
		return x.FiltersList
	}
	return nil
}

func (x *LiveFeedRequest) GetFleetsList() string {
	if x != nil {
		return x.FleetsList
	}
	return ""
}

func (x *LiveFeedRequest) GetHighlightMode() bool {
	if x != nil {
		return x.HighlightMode
	}
	return false
}

func (x *LiveFeedRequest) GetStats() bool {
	if x != nil && x.Stats != nil {
		return *x.Stats
	}
	return false
}

func (x *LiveFeedRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *LiveFeedRequest) GetMaxage() int32 {
	if x != nil && x.Maxage != nil {
		return *x.Maxage
	}
	return 0
}

func (x *LiveFeedRequest) GetRestrictionMode() RestrictionVisibility {
	if x != nil && x.RestrictionMode != nil {
		return *x.RestrictionMode
	}
	return RestrictionVisibility_NOT_VISIBLE
}

func (x *LiveFeedRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *LiveFeedRequest) GetSelectedFlightIdsList() []uint32 {
	if x != nil {
		return x.SelectedFlightIdsList
	}
	return nil
}

type LiveFeedResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FlightsList        []*Flight              `protobuf:"bytes,1,rep,name=flights_list,json=flightsList,proto3" json:"flights_list,omitempty"`
	Stats              *Stats                 `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	SelectedFlightList []*Flight              `protobuf:"bytes,3,rep,name=selected_flight_list,json=selectedFlightList,proto3" json:"selected_flight_list,omitempty"`
	ServerTimeMs       uint64                 `protobuf:"varint,4,opt,name=server_time_ms,json=serverTimeMs,proto3" json:"server_time_ms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LiveFeedResponse) Reset() {
	*x = LiveFeedResponse{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveFeedResponse) ProtoMessage() {}

func (x *LiveFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveFeedResponse.ProtoReflect.Descriptor instead.
func (*LiveFeedResponse) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{7}
}

func (x *LiveFeedResponse) GetFlightsList() []*Flight {
	if x != nil {
		return x.FlightsList
	}
	return nil
}

func (x *LiveFeedResponse) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *LiveFeedResponse) GetSelectedFlightList() []*Flight {
	if x != nil {
		return x.SelectedFlightList
	}
	return nil
}

func (x *LiveFeedResponse) GetServerTimeMs() uint64 {
	if x != nil {
		return x.ServerTimeMs
	}
	return 0
}

type PlaybackRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LiveFeedRequest *LiveFeedRequest       `protobuf:"bytes,1,opt,name=live_feed_request,json=liveFeedRequest,proto3" json:"live_feed_request,omitempty"`
	Timestamp       int32                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Start timestamp
	// End timestamp, should be timestamp + floor(7.5*(multiplier)) seconds
	//
	// For 1x playback, it should be timestamp + 7 seconds.
	Prefetch      int32  `protobuf:"varint,3,opt,name=prefetch,proto3" json:"prefetch,omitempty"`
	Hfreq         *int32 `protobuf:"varint,4,opt,name=hfreq,proto3,oneof" json:"hfreq,omitempty"` // High frequency mode, likely used to return granular data (?)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaybackRequest) Reset() {
	*x = PlaybackRequest{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackRequest) ProtoMessage() {}

func (x *PlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackRequest.ProtoReflect.Descriptor instead.
func (*PlaybackRequest) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{8}
}

func (x *PlaybackRequest) GetLiveFeedRequest() *LiveFeedRequest {
	if x != nil {
		return x.LiveFeedRequest
	}
	return nil
}

func (x *PlaybackRequest) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PlaybackRequest) GetPrefetch() int32 {
	if x != nil {
		return x.Prefetch
	}
	return 0
}

func (x *PlaybackRequest) GetHfreq() int32 {
	if x != nil && x.Hfreq != nil {
		return *x.Hfreq
	}
	return 0
}

type PlaybackResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	LiveFeedResponse *LiveFeedResponse      `protobuf:"bytes,1,opt,name=live_feed_response,json=liveFeedResponse,proto3" json:"live_feed_response,omitempty"` // NOTE: position buffer is not included in the response.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlaybackResponse) Reset() {
	*x = PlaybackResponse{}
	mi := &file_fr24_proto__live_feed_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackResponse) ProtoMessage() {}

func (x *PlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fr24_proto__live_feed_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackResponse.ProtoReflect.Descriptor instead.
func (*PlaybackResponse) Descriptor() ([]byte, []int) {
	return file_fr24_proto__live_feed_proto_rawDescGZIP(), []int{9}
}

func (x *PlaybackResponse) GetLiveFeedResponse() *LiveFeedResponse {
	if x != nil {
		return x.LiveFeedResponse
	}
	return nil
}

var File_fr24_proto__live_feed_proto protoreflect.FileDescriptor

const file_fr24_proto__live_feed_proto_rawDesc = "" +
	"\n" +
	"\x1bfr24/proto/_live_feed.proto\x12\x10fr24.feed.api.v1\x1a\x18fr24/proto/_common.proto\x1a google/protobuf/field_mask.proto\"h\n" +
	"\x12LocationBoundaries\x12\x14\n" +
	"\x05north\x18\x01 \x01(\x02R\x05north\x12\x14\n" +
	"\x05south\x18\x02 \x01(\x02R\x05south\x12\x12\n" +
	"\x04west\x18\x03 \x01(\x02R\x04west\x12\x12\n" +
	"\x04east\x18\x04 \x01(\x02R\x04east\"\xfe\x01\n" +
	"\x12VisibilitySettings\x126\n" +
	"\fsources_list\x18\x01 \x03(\x0e2\x13._common.DataSourceR\vsourcesList\x125\n" +
	"\rservices_list\x18\x02 \x03(\x0e2\x10._common.ServiceR\fservicesList\x127\n" +
	"\ftraffic_type\x18\x03 \x01(\x0e2\x14._common.TrafficTypeR\vtrafficType\x12,\n" +
	"\x0fonly_restricted\x18\x04 \x01(\bH\x00R\x0eonlyRestricted\x88\x01\x01B\x12\n" +
	"\x10_only_restricted\"{\n" +
	"\rAirportFilter\x12\x12\n" +
	"\x04iata\x18\x01 \x01(\tR\x04iata\x12\x1d\n" +
	"\n" +
	"country_id\x18\x02 \x01(\x05R\tcountryId\x127\n" +
	"\x04type\x18\x03 \x01(\x0e2#.fr24.feed.api.v1.AirportFilterTypeR\x04type\".\n" +
	"\bInterval\x12\x10\n" +
	"\x03min\x18\x01 \x01(\x05R\x03min\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x05R\x03max\"\\\n" +
	"\rAirlineFilter\x12\x12\n" +
	"\x04icao\x18\x01 \x01(\tR\x04icao\x127\n" +
	"\x04type\x18\x02 \x01(\x0e2#.fr24.feed.api.v1.AirlineFilterTypeR\x04type\"\xb9\x06\n" +
	"\x06Filter\x12L\n" +
	"\x14altitude_ranges_list\x18\x01 \x03(\v2\x1a.fr24.feed.api.v1.IntervalR\x12altitudeRangesList\x12F\n" +
	"\x11speed_ranges_list\x18\x02 \x03(\v2\x1a.fr24.feed.api.v1.IntervalR\x0fspeedRangesList\x12D\n" +
	"\rairlines_list\x18\x03 \x03(\v2\x1f.fr24.feed.api.v1.AirlineFilterR\fairlinesList\x12%\n" +
	"\x0ecallsigns_list\x18\x04 \x03(\tR\rcallsignsList\x12\x1f\n" +
	"\vradars_list\x18\x05 \x03(\tR\n" +
	"radarsList\x12\x1b\n" +
	"\tregs_list\x18\x06 \x03(\tR\bregsList\x12D\n" +
	"\rairports_list\x18\a \x03(\v2\x1f.fr24.feed.api.v1.AirportFilterR\fairportsList\x12!\n" +
	"\fflights_list\x18\b \x03(\tR\vflightsList\x12\x1d\n" +
	"\n" +
	"types_list\x18\t \x03(\tR\ttypesList\x12O\n" +
	"\x16birth_year_ranges_list\x18\n" +
	" \x03(\v2\x1a.fr24.feed.api.v1.IntervalR\x13birthYearRangesList\x12!\n" +
	"\fsquawks_list\x18\v \x03(\rR\vsquawksList\x12B\n" +
	"\forigins_list\x18\f \x03(\v2\x1f.fr24.feed.api.v1.AirportFilterR\voriginsList\x12L\n" +
	"\x11destinations_list\x18\r \x03(\v2\x1f.fr24.feed.api.v1.AirportFilterR\x10destinationsList\x129\n" +
	"\x0fcategories_list\x18\x0e \x03(\x0e2\x10._common.ServiceR\x0ecategoriesList\x12%\n" +
	"\x0eairspaces_list\x18\x0f \x03(\tR\rairspacesList\"\xe1\x04\n" +
	"\x0fLiveFeedRequest\x12<\n" +
	"\x06bounds\x18\x01 \x01(\v2$.fr24.feed.api.v1.LocationBoundariesR\x06bounds\x12@\n" +
	"\bsettings\x18\x02 \x01(\v2$.fr24.feed.api.v1.VisibilitySettingsR\bsettings\x12;\n" +
	"\ffilters_list\x18\x03 \x01(\v2\x18.fr24.feed.api.v1.FilterR\vfiltersList\x12\x1f\n" +
	"\vfleets_list\x18\x04 \x01(\tR\n" +
	"fleetsList\x12%\n" +
	"\x0ehighlight_mode\x18\x05 \x01(\bR\rhighlightMode\x12\x19\n" +
	"\x05stats\x18\x06 \x01(\bH\x00R\x05stats\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\a \x01(\x05H\x01R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06maxage\x18\b \x01(\x05H\x02R\x06maxage\x88\x01\x01\x12N\n" +
	"\x10restriction_mode\x18\t \x01(\x0e2\x1e._common.RestrictionVisibilityH\x03R\x0frestrictionMode\x88\x01\x01\x129\n" +
	"\n" +
	"field_mask\x18\n" +
	" \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x127\n" +
	"\x18selected_flight_ids_list\x18\v \x03(\aR\x15selectedFlightIdsListB\b\n" +
	"\x06_statsB\b\n" +
	"\x06_limitB\t\n" +
	"\a_maxageB\x13\n" +
	"\x11_restriction_mode\"\xd5\x01\n" +
	"\x10LiveFeedResponse\x122\n" +
	"\fflights_list\x18\x01 \x03(\v2\x0f._common.FlightR\vflightsList\x12$\n" +
	"\x05stats\x18\x02 \x01(\v2\x0e._common.StatsR\x05stats\x12A\n" +
	"\x14selected_flight_list\x18\x03 \x03(\v2\x0f._common.FlightR\x12selectedFlightList\x12$\n" +
	"\x0eserver_time_ms\x18\x04 \x01(\x04R\fserverTimeMs\"\xbf\x01\n" +
	"\x0fPlaybackRequest\x12M\n" +
	"\x11live_feed_request\x18\x01 \x01(\v2!.fr24.feed.api.v1.LiveFeedRequestR\x0fliveFeedRequest\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x05R\ttimestamp\x12\x1a\n" +
	"\bprefetch\x18\x03 \x01(\x05R\bprefetch\x12\x19\n" +
	"\x05hfreq\x18\x04 \x01(\x05H\x00R\x05hfreq\x88\x01\x01B\b\n" +
	"\x06_hfreq\"d\n" +
	"\x10PlaybackResponse\x12P\n" +
	"\x12live_feed_response\x18\x01 \x01(\v2\".fr24.feed.api.v1.LiveFeedResponseR\x10liveFeedResponse*8\n" +
	"\x11AirportFilterType\x12\b\n" +
	"\x04BOTH\x10\x00\x12\v\n" +
	"\aINBOUND\x10\x01\x12\f\n" +
	"\bOUTBOUND\x10\x02*4\n" +
	"\x11AirlineFilterType\x12\x0e\n" +
	"\n" +
	"PAINTED_AS\x10\x00\x12\x0f\n" +
	"\vOPERATED_BY\x10\x01B0Z.github.com/igolaizola/flightradar24/fr24/protob\x06proto3"

var (
	file_fr24_proto__live_feed_proto_rawDescOnce sync.Once
	file_fr24_proto__live_feed_proto_rawDescData []byte
)

func file_fr24_proto__live_feed_proto_rawDescGZIP() []byte {
	file_fr24_proto__live_feed_proto_rawDescOnce.Do(func() {
		file_fr24_proto__live_feed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fr24_proto__live_feed_proto_rawDesc), len(file_fr24_proto__live_feed_proto_rawDesc)))
	})
	return file_fr24_proto__live_feed_proto_rawDescData
}

var file_fr24_proto__live_feed_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fr24_proto__live_feed_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_fr24_proto__live_feed_proto_goTypes = []any{
	(AirportFilterType)(0),        // 0: fr24.feed.api.v1.AirportFilterType
	(AirlineFilterType)(0),        // 1: fr24.feed.api.v1.AirlineFilterType
	(*LocationBoundaries)(nil),    // 2: fr24.feed.api.v1.LocationBoundaries
	(*VisibilitySettings)(nil),    // 3: fr24.feed.api.v1.VisibilitySettings
	(*AirportFilter)(nil),         // 4: fr24.feed.api.v1.AirportFilter
	(*Interval)(nil),              // 5: fr24.feed.api.v1.Interval
	(*AirlineFilter)(nil),         // 6: fr24.feed.api.v1.AirlineFilter
	(*Filter)(nil),                // 7: fr24.feed.api.v1.Filter
	(*LiveFeedRequest)(nil),       // 8: fr24.feed.api.v1.LiveFeedRequest
	(*LiveFeedResponse)(nil),      // 9: fr24.feed.api.v1.LiveFeedResponse
	(*PlaybackRequest)(nil),       // 10: fr24.feed.api.v1.PlaybackRequest
	(*PlaybackResponse)(nil),      // 11: fr24.feed.api.v1.PlaybackResponse
	(DataSource)(0),               // 12: _common.DataSource
	(Service)(0),                  // 13: _common.Service
	(TrafficType)(0),              // 14: _common.TrafficType
	(RestrictionVisibility)(0),    // 15: _common.RestrictionVisibility
	(*fieldmaskpb.FieldMask)(nil), // 16: google.protobuf.FieldMask
	(*Flight)(nil),                // 17: _common.Flight
	(*Stats)(nil),                 // 18: _common.Stats
}
var file_fr24_proto__live_feed_proto_depIdxs = []int32{
	12, // 0: fr24.feed.api.v1.VisibilitySettings.sources_list:type_name -> _common.DataSource
	13, // 1: fr24.feed.api.v1.VisibilitySettings.services_list:type_name -> _common.Service
	14, // 2: fr24.feed.api.v1.VisibilitySettings.traffic_type:type_name -> _common.TrafficType
	0,  // 3: fr24.feed.api.v1.AirportFilter.type:type_name -> fr24.feed.api.v1.AirportFilterType
	1,  // 4: fr24.feed.api.v1.AirlineFilter.type:type_name -> fr24.feed.api.v1.AirlineFilterType
	5,  // 5: fr24.feed.api.v1.Filter.altitude_ranges_list:type_name -> fr24.feed.api.v1.Interval
	5,  // 6: fr24.feed.api.v1.Filter.speed_ranges_list:type_name -> fr24.feed.api.v1.Interval
	6,  // 7: fr24.feed.api.v1.Filter.airlines_list:type_name -> fr24.feed.api.v1.AirlineFilter
	4,  // 8: fr24.feed.api.v1.Filter.airports_list:type_name -> fr24.feed.api.v1.AirportFilter
	5,  // 9: fr24.feed.api.v1.Filter.birth_year_ranges_list:type_name -> fr24.feed.api.v1.Interval
	4,  // 10: fr24.feed.api.v1.Filter.origins_list:type_name -> fr24.feed.api.v1.AirportFilter
	4,  // 11: fr24.feed.api.v1.Filter.destinations_list:type_name -> fr24.feed.api.v1.AirportFilter
	13, // 12: fr24.feed.api.v1.Filter.categories_list:type_name -> _common.Service
	2,  // 13: fr24.feed.api.v1.LiveFeedRequest.bounds:type_name -> fr24.feed.api.v1.LocationBoundaries
	3,  // 14: fr24.feed.api.v1.LiveFeedRequest.settings:type_name -> fr24.feed.api.v1.VisibilitySettings
	7,  // 15: fr24.feed.api.v1.LiveFeedRequest.filters_list:type_name -> fr24.feed.api.v1.Filter
	15, // 16: fr24.feed.api.v1.LiveFeedRequest.restriction_mode:type_name -> _common.RestrictionVisibility
	16, // 17: fr24.feed.api.v1.LiveFeedRequest.field_mask:type_name -> google.protobuf.FieldMask
	17, // 18: fr24.feed.api.v1.LiveFeedResponse.flights_list:type_name -> _common.Flight
	18, // 19: fr24.feed.api.v1.LiveFeedResponse.stats:type_name -> _common.Stats
	17, // 20: fr24.feed.api.v1.LiveFeedResponse.selected_flight_list:type_name -> _common.Flight
	8,  // 21: fr24.feed.api.v1.PlaybackRequest.live_feed_request:type_name -> fr24.feed.api.v1.LiveFeedRequest
	9,  // 22: fr24.feed.api.v1.PlaybackResponse.live_feed_response:type_name -> fr24.feed.api.v1.LiveFeedResponse
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_fr24_proto__live_feed_proto_init() }
func file_fr24_proto__live_feed_proto_init() {
	if File_fr24_proto__live_feed_proto != nil {
		return
	}
	file_fr24_proto__common_proto_init()
	file_fr24_proto__live_feed_proto_msgTypes[1].OneofWrappers = []any{}
	file_fr24_proto__live_feed_proto_msgTypes[6].OneofWrappers = []any{}
	file_fr24_proto__live_feed_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fr24_proto__live_feed_proto_rawDesc), len(file_fr24_proto__live_feed_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fr24_proto__live_feed_proto_goTypes,
		DependencyIndexes: file_fr24_proto__live_feed_proto_depIdxs,
		EnumInfos:         file_fr24_proto__live_feed_proto_enumTypes,
		MessageInfos:      file_fr24_proto__live_feed_proto_msgTypes,
	}.Build()
	File_fr24_proto__live_feed_proto = out.File
	file_fr24_proto__live_feed_proto_goTypes = nil
	file_fr24_proto__live_feed_proto_depIdxs = nil
}
